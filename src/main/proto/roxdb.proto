syntax = "proto3";

package com.github.lukaszbudnik.roxdb.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

option java_multiple_files = true;

// Key structure
message Key {
  string partition_key = 1;
  string sort_key = 2;
}

// Item structure using google.protobuf.Struct for dynamic attributes
message Item {
  Key key = 1;
  google.protobuf.Struct attributes = 2;
}

message ItemRequest {
  string correlation_id = 1;
  oneof operation {
    PutItem put_item = 3;
    UpdateItem update_item = 4;
    GetItem get_item = 5;
    DeleteItem delete_item = 6;
    Query query = 7;
    TransactWriteItems transact_write_items = 8;  // New operation
  }

  message PutItem {
    string table = 1;
    Item item = 2;
  }

  message UpdateItem {
    string table = 1;
    Item item = 2;
  }

  message GetItem {
    string table = 1;
    Key key = 2;
  }

  message DeleteItem {
    string table = 1;
    Key key = 2;
  }

  message Query {
    string table = 1;
    string partition_key = 2;
    int32 limit = 3;
    optional SortKeyRange sort_key_range = 4;
  }

  enum RangeType {
    INCLUSIVE = 0;
    EXCLUSIVE = 1;
  }

  message RangeBoundary {
    string value = 1;
    RangeType type = 2;
  }

  message SortKeyRange {
    optional RangeBoundary start = 1;
    optional RangeBoundary end = 2;
  }

  message TransactWriteItems {
    repeated TransactWriteItem items = 1;
  }

  message TransactWriteItem {
    oneof operation {
      PutItem put = 1;
      UpdateItem update = 2;
      DeleteItem delete = 3;
    }
  }
}

message ItemResponse {
  string correlation_id = 1;
  oneof result {
    Errors errors = 2;
    PutItemResponse put_item_response = 3;
    UpdateItemResponse update_item_response = 4;
    GetItemResponse get_item_response = 5;
    DeleteItemResponse delete_item_response = 6;
    QueryResponse query_response = 7;
    TransactWriteItemsResponse transact_write_items_response = 8;
  }

  message Errors {
    repeated Error error = 1;
  }

  // Error structure
  message Error {
    string message = 1;
    int32 code = 2;
  }

  message GetItemResponse {
    oneof result {
      Item item = 1;
      ItemNotFound item_not_found = 2;
    }

    message ItemNotFound {
      Key key = 1;
    }
  }

  message QueryResponse {
    oneof result {
      ItemsQueryResult items_query_result = 1;
    }

    message ItemsQueryResult {
      repeated Item items = 1;
    }
  }

  message PutItemResponse {
    oneof result {
      Key key = 1;
    }
  }

  message UpdateItemResponse {
    oneof result {
      Key key = 1;
    }
  }

  message DeleteItemResponse {
    oneof result {
      Key key = 1;
    }
  }

  message TransactWriteItemsResponse {
    oneof result {
      TransactWriteItemsResult transact_write_items_result = 1;
    }

    message TransactWriteItemsResult {
      repeated Key modified_keys = 1;
    }
  }

}

// Service definition
service RoxDB {
  rpc ProcessItems(stream ItemRequest) returns (stream ItemResponse) {}
}
